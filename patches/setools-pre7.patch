diff --git a/libqpol/policy_extend.c b/libqpol/policy_extend.c
index 519c844..4f577fe 100644
--- a/libqpol/policy_extend.c
+++ b/libqpol/policy_extend.c
@@ -171,7 +171,7 @@ static int qpol_policy_remove_bogus_aliases(qpol_policy_t * policy)
  *  Builds data for the attributes and inserts them into the policydb.
  *  This function modifies the policydb. Names created for attributes
  *  are of the form @ttr<value> where value is the value of the attribute
- *  as a four digit number (prepended with 0's as needed).
+ *  as a ten digit number (prepended with 0's as needed).
  *  @param policy The policy from which to read the attribute map and
  *  create the type data for the attributes. This policy will be altered
  *  by this function.
@@ -186,7 +186,7 @@ static int qpol_policy_build_attrs_from_map(qpol_policy_t * policy)
 	uint32_t bit = 0, count = 0;
 	ebitmap_node_t *node = NULL;
 	type_datum_t *tmp_type = NULL, *orig_type;
-	char *tmp_name = NULL, buff[10];
+	char *tmp_name = NULL, buff[16];
 	int error = 0, retv;
 
 	INFO(policy, "%s", "Generating attributes for policy. (Step 4 of 5)");
@@ -198,7 +198,7 @@ static int qpol_policy_build_attrs_from_map(qpol_policy_t * policy)
 
 	db = &policy->p->p;
 
-	memset(&buff, 0, 10 * sizeof(char));
+	memset(&buff, 0, 16 * sizeof(char));
 
 	for (i = 0; i < db->p_types.nprim; i++) {
 		/* skip types */
@@ -218,7 +218,7 @@ static int qpol_policy_build_attrs_from_map(qpol_policy_t * policy)
 		 * with this attribute */
 		/* Does not exist */
 		if (db->p_type_val_to_name[i] == NULL){
-			snprintf(buff, 9, "@ttr%04zd", i + 1);
+			snprintf(buff, 15, "@ttr%010zd", i + 1);
 			tmp_name = strdup(buff);
 			if (!tmp_name) {
 				error = errno;
@@ -300,7 +300,7 @@ static int qpol_policy_build_attrs_from_map(qpol_policy_t * policy)
  *  Builds data for empty attributes and inserts them into the policydb.
  *  This function modifies the policydb. Names created for the attributes
  *  are of the form @ttr<value> where value is the value of the attribute
- *  as a four digit number (prepended with 0's as needed).
+ *  as a ten digit number (prepended with 0's as needed).
  *  @param policy The policy to which to add type data for attributes.
  *  This policy will be altered by this function.
  *  @return Returns 0 on success and < 0 on failure; if the call fails,
@@ -310,7 +310,7 @@ static int qpol_policy_build_attrs_from_map(qpol_policy_t * policy)
 static int qpol_policy_fill_attr_holes(qpol_policy_t * policy)
 {
 	policydb_t *db = NULL;
-	char *tmp_name = NULL, buff[10];
+	char *tmp_name = NULL, buff[16];
 	int error = 0, retv = 0;
 	ebitmap_t tmp_bmap = { NULL, 0 };
 	type_datum_t *tmp_type = NULL;
@@ -324,12 +324,12 @@ static int qpol_policy_fill_attr_holes(qpol_policy_t * policy)
 
 	db = &policy->p->p;
 
-	memset(&buff, 0, 10 * sizeof(char));
+	memset(&buff, 0, 16 * sizeof(char));
 
 	for (i = 0; i < db->p_types.nprim; i++) {
 		if (db->type_val_to_struct[i])
 			continue;
-		snprintf(buff, 9, "@ttr%04zd", i + 1);
+		snprintf(buff, 15, "@ttr%010zd", i + 1);
 		tmp_name = strdup(buff);
 		if (!tmp_name) {
 			error = errno;
diff --git a/setup.py b/setup.py
index 5f89271..004e24c 100644
--- a/setup.py
+++ b/setup.py
@@ -118,7 +118,6 @@ ext_py_mods = [Extension('setools.policyrep._qpol',
                                              '-Wnested-externs',
                                              '-Wold-style-definition',
                                              '-Wpointer-arith',
-                                             '-Wredundant-decls',
                                              '-Wstrict-prototypes',
                                              '-Wunknown-pragmas',
                                              '-Wwrite-strings',
@@ -126,6 +125,7 @@ ext_py_mods = [Extension('setools.policyrep._qpol',
                                              '-Wno-unused-parameter', # SWIG generates functions with unused parameters
                                              '-Wno-cast-qual', # libsepol/libselinux uses const-to-nonconst casts
                                              '-Wno-shadow', # SWIG generates shadow variables
+                                             '-Wno-sign-compare',
                                              '-fno-exceptions'],
                          extra_objects=[static_sepol],
                          extra_link_args=['-Wl,--version-script=libqpol/libqpol.map'],
